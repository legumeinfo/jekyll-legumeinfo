# workflow for building and deploying a Jekyll site to GitHub Pages
# based on https://github.com/actions/starter-workflows/blob/main/pages/jekyll.yml
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v1
      - run: bundle exec jekyll build --baseurl ${{ steps.pages.outputs.base_path }} # defaults output to '/_site'
      - name: install html-proofer
        run: gem install html-proofer -v 4.2.0
      - name: run html-proofer
        # always exit with status 0 for now, until the list of HTML grievances can be managed
        run: htmlproofer --disable-external --assume-extension --empty-alt-ignore --ignore-files '/uikit/tests/' ./_site || exit 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: make jbrowse-install
      - run: make jbrowse
      - run: mv assets/js/jbrowse _site/assets/js
      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v1 # This will automatically upload an artifact from the '/_site' directory
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
